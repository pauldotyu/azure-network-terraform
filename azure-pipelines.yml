# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
- group: kvdevops1

stages:
- stage: start_aci
  pool:
    vmImage: ubuntu-latest
  jobs:
  - job: start_aci
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'terraform'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az container start -n acicontoso -g rg-devops'
- stage: terraform_plan
  pool:
    name: Contoso
    demands:
      - agent.name -equals acicontoso
  dependsOn: start_aci
  jobs:
  - job: terraform_plan
    steps:
    - script: |
        export ARM_CLIENT_ID=$(client-id) 
        export ARM_CLIENT_SECRET=$(client-secret)
        export ARM_SUBSCRIPTION_ID=$(main-subscription-id)
        export ARM_TENANT_ID=$(tenant-id)
        terraform init \
          -backend-config="resource_group_name=rg-devops" \
          -backend-config="storage_account_name=satfstate98722" \
          -backend-config="container_name=cloudops-network-tfstate" \
          -backend-config="key=terraform.tfstate"
- stage: stop_aci
  pool:
    vmImage: ubuntu-latest
  dependsOn: terraform_plan
  jobs:
  - job: stop_aci
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'terraform'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az container stop -n acicontoso -g rg-devops'